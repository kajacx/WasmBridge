
interface udp {
    use wasi:io/poll@0.2.0-rc-2023-11-10.{pollable};
    use network.{network, error-code, ip-socket-address, ip-address-family};

    /// A received datagram.
    record incoming-datagram {
        /// The payload.
        /// 
        /// Theoretical max size: ~64 KiB. In practice, typically less than 1500 bytes.
        data: list<u8>,

        /// The source address.
        ///
        /// This field is guaranteed to match the remote address the stream was initialized with, if any.
        ///
        /// Equivalent to the `src_addr` out parameter of `recvfrom`.
        remote-address: ip-socket-address,
    }

    /// A datagram to be sent out.
    record outgoing-datagram {
        /// The payload.
        data: list<u8>,

        /// The destination address.
        ///
        /// The requirements on this field depend on how the stream was initialized:
        /// - with a remote address: this field must be None or match the stream's remote address exactly.
        /// - without a remote address: this field is required.
        ///
        /// If this value is None, the send operation is equivalent to `send` in POSIX. Otherwise it is equivalent to `sendto`.
        remote-address: option<ip-socket-address>,
    }



    /// A UDP socket handle.
    type udp-socket = u32;

    type incoming-datagram-stream = u32;

    type outgoing-datagram-stream = u32;
}
