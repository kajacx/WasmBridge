package component-test:wit-protocol;

interface host-add {
  add-one: func(num: s32) -> s32;
}

interface guest-add {
  add-three: func(num: s32) -> s32;
}

world test-world {
  record person {
    full-name: string,
    age: u32,
    salary: u32,
  }

  import set-salary: func(emloyee: person, amount: u32) -> person;
  export promote-person: func(emloyee: person, raise: u32) -> person;

  import host-add;
  export guest-add;

  import host-sub: interface {
    sub-one: func(num: s32) -> s32;
  }
  export guest-sub: interface {
    sub-three: func(num: s32) -> s32;
  }

  import increment: func();
  export increment-twice: func();

  import add-all: func(a: s32, b: s64, c: u32, d: u64, e: float32, f: float64, g: string) -> float64;
  export add-all-and-one: func(a: s32, b: s64, c: u32, d: u64, e: float32, f: float64, g: string) -> float64;

  import add-sub-two: func(num: s32) -> tuple<s32, s32>;
  export add-sub-one: func(num: s32) -> tuple<s32, s32>;

  import add-sub-ten: func(num: s32) -> (added: s32, subtracted: s32);
  export add-sub-twenty: func(num: s32) -> (added: s32, subtracted: s32);
}
